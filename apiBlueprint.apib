FORMAT: 1A
HOST: nodeapp-ibakovic.rhcloud.com

# nodejsapi

Let's see what user can do

## Get all users and register new [/register]

### Register a user [POST]
Registeres a user, but not if the user already exists

+ Request (application/json)

            {
                "username":"korisnik",
                "password":"pass"
            }

+ Response 200 (application/json)

            {
                "msg": "Registation completed"
            }

+ Request (application/json)

            {
                "username": "korisnik",
                "password": "pass"
            }

+ Response 400 (application/json)

            {
                "msg": "Username already exists."
            }

## Log in [/login]

### Log in [POST]
Log in with your credentials, shouldn't log in if username doesn't exist or password doesn't match

+ Request (application/json)

            {
                "username":"korisnik",
                "password":"pass"
            }

+ Response 200 (application/json)

            {
                {
                    "msg": "Token created",
                    "success": true,
                    "data": {
                        "username": "korisnik",
                        "id": "41uclblVx"
                    },
                    "token": "Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo"
                }
            }

+ Request (application/json)

            {
                "username": "korisnik",
                "password": "password"
            }

+ Response 400 (application/json)

            {
                "msg": "Couldn\'t log in with these credentials"
            }

## Single user [/]

### Get user information [GET]

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

+ Response 200 (application/json)
    + Body

            {
                {
                    "success": true,
                    "data": {
                        "username": "korisnik",
                        "id": "41uclblVx"
                    }
                }
            }

### Update password [PUT]

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

    + Body

            {
                "update": "pass2"
            }

+ Response 200 (application/json)
    + Body

            {
                "msg": "Password updated",
                "success": true,
                "data": {
                    "username": "korisnik",
                    "id": "41uclblVx"
                }
            }

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

    + Body

            {
                "update": ""
            }


+ Response 400 (application/json)
    + Body

            {
                "msg": "Password parameter is required",
                "success": false
            }

### Delete user [DELETE]

+ Request
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

+ Response 200 (application/json)
    + Body

            {
                "msg": "User deleted",
                "success": true
            }

## User movies [/movies]

### Check all user movies [GET]

+ Request (application/json)
     + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

+ Response 200 (application/json)
    + Body

            {
                "msg": "Movie entries are found",
                "success": true,
                "data": [
                    {
                        "title": "korisnikovFilm",
                        "link": "",
                        "addedBy": "41uclblVx",
                        "id": "Ny2mX-gNl"
                    }
                ]
            }

### Add a new movie [POST]

+ Request (application/json)
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

    + Body

            {
                "title":"korisnikovFilm",
                "link":""
            }

+ Response 200 (application/json)

        {
            "msg": "Movie added",
            "success": true,
            "data": {
                "__v": 0,
                "title": "korisnikovFilm",
                "link": "",
                "addedBy": "41uclblVx",
                "_id": "Ny2mX-gNl"
            }
        }

+ Request (application/json)
    + Headers

             Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

    + Body

            {
                "title":"",
                "link":""
            }

+ Response 400 (application/json)

            {
                "msg": "Title parameter is required",
                "success": false
            }

+ Request (applicattion/json)
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

    + Body

            {
                "title":"korisnikovFilm",
                "link":""
            }

+ Response 400  (applicattion/json)

            {
                "msg": "Title already exists",
                "success": false
            }
## Single user movie [/movies/{movieId}]

+ Parameters
    + movieId (text)

### Get a user movie [GET]

+ Request (application/json)
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

+ Response 200

            {
                "msg": "Movie found",
                "success": true,
                "data": {
                    "title": "korisnikovFilm",
                    "link": "",
                    "addedBy": "41uclblVx",
                    "id": "Ny2mX-gNl"
                }
            }

### Change user movie title [PUT]

+ Request (application/json)
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

    + Body

            {
                "update":"Film"
            }

+ Response 200 (application/json)

            {
                "data": {
                    "_id": "Ny2mX-gNl",
                    "title": "Film",
                    "link": "",
                    "addedBy": "41uclblVx",
                    "__v": 0
                },
                "msg": "Movie updated",
                "success": true
            }

+ Request (application/json)
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJpZCI6IjQxdWNsYmxWeCIsImlhdCI6MTQ0ODU0NjgyMCwiZXhwIjo2MDAwMDAxNDQ4NTQ2ODIwfQ.bj_dc1uUauPUEjqm19xf44DZruWjOioMJs55UCY2kGo

    + Body

            {
                "update":""
            }

+ Response 400 (application/json)

            {
                "msg": "Title parameter is required"
            }
### Delete movie [DELETE]
+ Request (application/json)
    + Headers

            Authorization: Bearer eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6Im5ldyIsImlhdCI6MTQ0Nzk0MDYwNCwiZXhwIjoxNDQ3OTQxMjA0fQ.qcmZksW7xhSRb7bMg3onf4U2S1KGFV3Ox-0niqRxJvc

+ Response 200 (application/json)

            {
                "msg": "Movie deleted",
                "success": true
            }

+ Response 400 (application/json)
